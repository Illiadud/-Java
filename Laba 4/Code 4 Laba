// Завдання 1: Знайти суму елементів масиву, у яких індекс кратний 3
public class SumOfElementsWithIndexMultipleOfThree {
    public static int findSum(int[] array) {
        if (array == null) {
            throw new NullPointerException("Масив не може бути null");
        }

        int sum = 0;
        for (int i = 0; i < array.length; i++) {
            if (i % 3 == 0) {
                sum += array[i];
            }
        }
        return sum;
    }

    public static void main(String[] args) {
        int[] array1 = {1, 2, 3, 4, 5, 6, 7, 8, 9};
        int[] array2 = {10, 20, 30, 40, 50};

        System.out.println(findSum(array1)); // Виведе 15 (1+4+7)
        System.out.println(findSum(array2)); // Виведе 90 (10+40)

        try {
            findSum(null); // Викине NullPointerException
        } catch (NullPointerException e) {
            System.out.println("NullPointerException: " + e.getMessage());
        }
    }
}

// Завдання 2: Знайти кількість парних елементів
public class CountEvenElements {
    public static int countEvens(int[] array) {
        if (array == null) {
            throw new NullPointerException("Масив не може бути null");
        }

        int count = 0;
        for (int num : array) {
            if (num % 2 == 0) {
                count++;
            }
        }
        return count;
    }

    public static void main(String[] args) {
        int[] array1 = {1, 2, 3, 4, 5, 6};
        int[] array2 = {10, 15, 20, 25};

        System.out.println(countEvens(array1)); // Виведе 3
        System.out.println(countEvens(array2)); // Виведе 2

        try {
            countEvens(null); // Викине NullPointerException
        } catch (NullPointerException e) {
            System.out.println("NullPointerException: " + e.getMessage());
        }
    }
}

// Завдання 3: Задано масиви A(n) та B(n). Сформувати масив C(2*n)
public class MergeArrays {
    public static int[] mergeArrays(int[] arrayA, int[] arrayB) {
        if (arrayA == null || arrayB == null) {
            throw new NullPointerException("Жоден з масивів не може бути null");
        }

        if (arrayA.length != arrayB.length) {
            throw new IllegalArgumentException("Масиви повинні бути однакової довжини");
        }

        int[] arrayC = new int[arrayA.length + arrayB.length];
        int index = 0;

        for (int i = 0; i < arrayA.length; i++) {
            arrayC[index++] = arrayA[i];
            arrayC[index++] = arrayB[i];
        }

        return arrayC;
    }

    public static void main(String[] args) {
        int[] arrayA = {1, 3, 5};
        int[] arrayB = {2, 4, 6};

        int[] mergedArray = mergeArrays(arrayA, arrayB);
        for (int num : mergedArray) {
            System.out.print(num + " ");
        }
        // Виведе: 1 2 3 4 5 6

        try {
            mergeArrays(arrayA, new int[]{1, 2}); // Викине IllegalArgumentException
        } catch (IllegalArgumentException e) {
            System.out.println("IllegalArgumentException: " + e.getMessage());
        }

        try {
            mergeArrays(null, arrayB); // Викине NullPointerException
        } catch (NullPointerException e) {
            System.out.println("NullPointerException: " + e.getMessage());
        }
    }
}
